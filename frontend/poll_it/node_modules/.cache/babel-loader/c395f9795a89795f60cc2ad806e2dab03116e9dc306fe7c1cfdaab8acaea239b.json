{"ast":null,"code":"var _jsxFileName = \"D:\\\\LSAC\\\\Proba IT\\\\POLL_IT\\\\frontend\\\\poll_it\\\\src\\\\components\\\\Cards\\\\OneCard.js\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Card from \"react-bootstrap/Card\";\nimport { Button } from \"bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OneCard(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: props.Question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Make a choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"list-group-flush\",\n        children: props.Options.map(opt => {\n          return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              id: `default-radio`,\n              label: opt.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        id: \"bodyParentCardLink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = OneCard;\nexport default OneCard;\nvar _c;\n$RefreshReg$(_c, \"OneCard\");","map":{"version":3,"names":["ListGroup","Card","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","OneCard","props","children","style","width","Body","Title","Question","fileName","_jsxFileName","lineNumber","columnNumber","Text","className","Options","map","opt","Item","Check","type","id","label","name","_c","$RefreshReg$"],"sources":["D:/LSAC/Proba IT/POLL_IT/frontend/poll_it/src/components/Cards/OneCard.js"],"sourcesContent":["import ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Button } from \"bootstrap\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nfunction OneCard(props) {\r\n    return (\r\n        <>\r\n            <Card style={{ width: \"18rem\" }}>\r\n                <Card.Body>\r\n                    <Card.Title>{props.Question}</Card.Title>\r\n                    <Card.Text>Make a choice</Card.Text>\r\n                </Card.Body>\r\n                <ListGroup className=\"list-group-flush\">\r\n                    {props.Options.map((opt) => {\r\n                        return (<ListGroup.Item>\r\n                            <Form.Check\r\n                                type=\"radio\"\r\n                                id={`default-radio`}\r\n                                label={opt.name} />\r\n                        </ListGroup.Item>\r\n                        );\r\n                    })}\r\n                </ListGroup>\r\n                <Card.Body id=\"bodyParentCardLink\">\r\n                    {/* <Button>\r\n                        Vote\r\n                    </Button> */}\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OneCard;"],"mappings":";AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxC,SAASC,OAAOA,CAACC,KAAK,EAAE;EACpB,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACIL,OAAA,CAACJ,IAAI;MAACU,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAF,QAAA,gBAC5BL,OAAA,CAACJ,IAAI,CAACY,IAAI;QAAAH,QAAA,gBACNL,OAAA,CAACJ,IAAI,CAACa,KAAK;UAAAJ,QAAA,EAAED,KAAK,CAACM;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACzCd,OAAA,CAACJ,IAAI,CAACmB,IAAI;UAAAV,QAAA,EAAC;QAAa;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACZd,OAAA,CAACL,SAAS;QAACqB,SAAS,EAAC,kBAAkB;QAAAX,QAAA,EAClCD,KAAK,CAACa,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;UACxB,oBAAQnB,OAAA,CAACL,SAAS,CAACyB,IAAI;YAAAf,QAAA,eACnBL,OAAA,CAACF,IAAI,CAACuB,KAAK;cACPC,IAAI,EAAC,OAAO;cACZC,EAAE,EAAG,eAAe;cACpBC,KAAK,EAAEL,GAAG,CAACM;YAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC;QAErB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACZd,OAAA,CAACJ,IAAI,CAACY,IAAI;QAACe,EAAE,EAAC;MAAoB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIvB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACT,CAAC;AAEX;AAACY,EAAA,GA3BQvB,OAAO;AA6BhB,eAAeA,OAAO;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}