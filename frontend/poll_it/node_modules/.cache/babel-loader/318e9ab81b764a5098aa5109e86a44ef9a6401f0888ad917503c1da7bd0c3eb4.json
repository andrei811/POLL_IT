{"ast":null,"code":"var _jsxFileName = \"/workspaces/POLL_IT/frontend/poll_it/src/components/Cards/OneCard.js\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Card from \"react-bootstrap/Card\";\nimport { Button } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction OneCard(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\",\n        margin: \"2rem 2rem 0 2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: props.Question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Make a choice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"list-group-flush\",\n        children: props.Options.map(opt => {\n          return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              id: `default`,\n              label: opt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        id: \"bodyParentCardLink\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = OneCard;\nexport default OneCard;\nvar _c;\n$RefreshReg$(_c, \"OneCard\");","map":{"version":3,"names":["ListGroup","Card","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","OneCard","props","children","style","width","margin","Body","Title","Question","fileName","_jsxFileName","lineNumber","columnNumber","Text","className","Options","map","opt","Item","Check","id","label","_c","$RefreshReg$"],"sources":["/workspaces/POLL_IT/frontend/poll_it/src/components/Cards/OneCard.js"],"sourcesContent":["import ListGroup from \"react-bootstrap/ListGroup\";\nimport Card from \"react-bootstrap/Card\";\nimport { Button } from \"react-bootstrap\";\nimport Form from 'react-bootstrap/Form';\n\n\nfunction OneCard(props) {\n\n    return (\n        <>\n            <Card style={{ width: \"18rem\", margin: \"2rem 2rem 0 2rem\" }}>\n                <Card.Body>\n                    <Card.Title>{props.Question}</Card.Title>\n                    <Card.Text>Make a choice</Card.Text>\n                </Card.Body>\n                <ListGroup className=\"list-group-flush\">\n                    {props.Options.map((opt) => {\n                        return (<ListGroup.Item>\n                            <Form.Check\n                                id={`default`}\n                                label={opt} />\n                        </ListGroup.Item>\n                        );\n                    })}\n                </ListGroup>\n                <Card.Body id=\"bodyParentCardLink\">\n                    <Button>Vote</Button>\n                </Card.Body>\n            </Card>\n        </>\n    );\n}\n\nexport default OneCard;"],"mappings":";AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGxC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAEpB,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACIL,OAAA,CAACJ,IAAI;MAACU,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAmB,CAAE;MAAAH,QAAA,gBACxDL,OAAA,CAACJ,IAAI,CAACa,IAAI;QAAAJ,QAAA,gBACNL,OAAA,CAACJ,IAAI,CAACc,KAAK;UAAAL,QAAA,EAAED,KAAK,CAACO;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACzCf,OAAA,CAACJ,IAAI,CAACoB,IAAI;UAAAX,QAAA,EAAC;QAAa;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACZf,OAAA,CAACL,SAAS;QAACsB,SAAS,EAAC,kBAAkB;QAAAZ,QAAA,EAClCD,KAAK,CAACc,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;UACxB,oBAAQpB,OAAA,CAACL,SAAS,CAAC0B,IAAI;YAAAhB,QAAA,eACnBL,OAAA,CAACF,IAAI,CAACwB,KAAK;cACPC,EAAE,EAAG,SAAS;cACdC,KAAK,EAAEJ;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAErB,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eACZf,OAAA,CAACJ,IAAI,CAACa,IAAI;QAACc,EAAE,EAAC,oBAAoB;QAAAlB,QAAA,eAC9BL,OAAA,CAACH,MAAM;UAAAQ,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC,gBACT,CAAC;AAEX;AAACU,EAAA,GAzBQtB,OAAO;AA2BhB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}